#summary Javascript redesign plans

= Introduction =

The initial development of the javascript front end is sloppy at best. This really needs a complete rewrite and rework to help with stability and extendability.


= Details =

The main parts of the 


===loadTree()===
This re-reads the content tree and updates
===loadAlbumSelect()===
album,image
===onTreeClick(item, node)===
general
===newAlbum()===
album
===addNewAlbum(dialogFields)===
album
===imagesTab()===
album,images
===editFileTab(file)===
admin
===viewSiteTab()===
general
===mailboxesTab()===
mailboxes
===albumTab()===
album
===deleteAlbum(albumid, nodeToRemove)===
album
===deleteMailbox(mboxid,nodeToRemove)===
mailboxes
===editWidget(widgetid)===
widget
===loadVol(volindex)===
volume
===loadMag(magindex)===
mag
===deleteMag(magid, magheader)===
mag
===openTab(tab)===
unused
===mceSubmitForm(editid)===
mag?
handle save button from tinymce interface
===save_response_callback(response)===
unused, general 
This should not be used as _all_ responses that only contain a notification should use json
===save_response_callback_json(responseObj)===
general
===json_response_callback(response)===
general, unused
This should also not be used as this does the same as above, basically.
===submitForm(button,aurl,formObj,response_callback)===
general
This submits forms and is intended to be a general usage function, although it was not used, this should be replaced in all the functions by their own code to remove some complexity.
===submitFormData(aurl, formObj, callback)===
general
basically this does the same as above and should see the same fate as above.
===getWidget(name)===
widget
===messageClick(msgid)===
mailboxes, message
===messageCheck(msgid)===
mailboxes, message
===call_message_function(choice)===
mailboxes, message
===setswfuparams()===
unused
===dojofileupload(target)===
images
===swfuInit(target)===
unused
===changeAlbum()===
album
===initEditor()===
tinymce,mag, unused
===killEditor()===
tinymce,mag,unused
===thumbClick(obj)===
images
===myHandler(idOfBox, value)===
images
edited inline form
===albumEditBoxHandler(idOfBox,value)===
album
===imageLinkHandler(idOfBox, value)===
images
when the link part is clicked
===loadWidget(thename)===
widget
===addWidget(widgetId)===
widget
===saveWidgetConfig()===
widget
===saveWidget(button)===
widget
===moveWidgetLeft(wid)===
widget
===moveWidgetRight(wid)===
widget
===moveWidgetUp(wid)===
widget
===moveWidgetDown(wid)===
widget
===closeWidget(wid)===
widget
===imageDeleteFiles()===
image
===saveSiteVars()===
widget
===saveFile()===
admin
===siteTab()===
admin
===deleteImage(imageId,needconfirm)===
image